import { ElementRef, EventEmitter } from '@angular/core';
import { ChartSeriesComponent } from './ChartSeriesComponent';
import { ChartXAxisComponent } from './ChartXAxisComponent';
import { ChartYAxisComponent } from './ChartYAxisComponent';
import { HighchartsService } from './HighchartsService';
import { ChartEvent } from './ChartEvent';
import * as ɵngcc0 from '@angular/core';
export declare class ChartComponent {
    series: ChartSeriesComponent;
    xAxis: ChartXAxisComponent;
    yAxis: ChartYAxisComponent;
    create: EventEmitter<any>;
    click: EventEmitter<ChartEvent>;
    addSeries: EventEmitter<ChartEvent>;
    afterPrint: EventEmitter<ChartEvent>;
    beforePrint: EventEmitter<ChartEvent>;
    drilldown: EventEmitter<ChartEvent>;
    drillup: EventEmitter<ChartEvent>;
    load: EventEmitter<ChartEvent>;
    redraw: EventEmitter<ChartEvent>;
    selection: EventEmitter<ChartEvent>;
    chart: any;
    element: ElementRef;
    highchartsService: HighchartsService;
    private userOpts;
    private baseOpts;
    type: string;
    options: any;
    private init();
    ngAfterViewInit(): void;
    constructor(element: ElementRef, highchartsService: HighchartsService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChartComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ChartComponent, "chart", never, { "type": "type"; "options": "options"; }, { "create": "create"; "click": "click"; "addSeries": "addSeries"; "afterPrint": "afterPrint"; "beforePrint": "beforePrint"; "drilldown": "drilldown"; "drillup": "drillup"; "load": "load"; "redraw": "redraw"; "selection": "selection"; }, ["series", "xAxis", "yAxis"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2hhcnRDb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiQ2hhcnRDb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2hhcnRTZXJpZXNDb21wb25lbnQgfSBmcm9tICcuL0NoYXJ0U2VyaWVzQ29tcG9uZW50JztcbmltcG9ydCB7IENoYXJ0WEF4aXNDb21wb25lbnQgfSBmcm9tICcuL0NoYXJ0WEF4aXNDb21wb25lbnQnO1xuaW1wb3J0IHsgQ2hhcnRZQXhpc0NvbXBvbmVudCB9IGZyb20gJy4vQ2hhcnRZQXhpc0NvbXBvbmVudCc7XG5pbXBvcnQgeyBIaWdoY2hhcnRzU2VydmljZSB9IGZyb20gJy4vSGlnaGNoYXJ0c1NlcnZpY2UnO1xuaW1wb3J0IHsgQ2hhcnRFdmVudCB9IGZyb20gJy4vQ2hhcnRFdmVudCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDaGFydENvbXBvbmVudCB7XG4gICAgc2VyaWVzOiBDaGFydFNlcmllc0NvbXBvbmVudDtcbiAgICB4QXhpczogQ2hhcnRYQXhpc0NvbXBvbmVudDtcbiAgICB5QXhpczogQ2hhcnRZQXhpc0NvbXBvbmVudDtcbiAgICBjcmVhdGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNsaWNrOiBFdmVudEVtaXR0ZXI8Q2hhcnRFdmVudD47XG4gICAgYWRkU2VyaWVzOiBFdmVudEVtaXR0ZXI8Q2hhcnRFdmVudD47XG4gICAgYWZ0ZXJQcmludDogRXZlbnRFbWl0dGVyPENoYXJ0RXZlbnQ+O1xuICAgIGJlZm9yZVByaW50OiBFdmVudEVtaXR0ZXI8Q2hhcnRFdmVudD47XG4gICAgZHJpbGxkb3duOiBFdmVudEVtaXR0ZXI8Q2hhcnRFdmVudD47XG4gICAgZHJpbGx1cDogRXZlbnRFbWl0dGVyPENoYXJ0RXZlbnQ+O1xuICAgIGxvYWQ6IEV2ZW50RW1pdHRlcjxDaGFydEV2ZW50PjtcbiAgICByZWRyYXc6IEV2ZW50RW1pdHRlcjxDaGFydEV2ZW50PjtcbiAgICBzZWxlY3Rpb246IEV2ZW50RW1pdHRlcjxDaGFydEV2ZW50PjtcbiAgICBjaGFydDogYW55O1xuICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgaGlnaGNoYXJ0c1NlcnZpY2U6IEhpZ2hjaGFydHNTZXJ2aWNlO1xuICAgIHByaXZhdGUgdXNlck9wdHM7XG4gICAgcHJpdmF0ZSBiYXNlT3B0cztcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgb3B0aW9uczogYW55O1xuICAgIHByaXZhdGUgaW5pdCgpO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIGhpZ2hjaGFydHNTZXJ2aWNlOiBIaWdoY2hhcnRzU2VydmljZSk7XG59XG4iXX0=